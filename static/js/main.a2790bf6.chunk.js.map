{"version":3,"sources":["utilities/theme.ts","components/Button/index.ts","components/Button/Button.tsx","hooks/useTimer.ts","hooks/useSoundEffect.ts","components/CircularProgress/index.ts","components/CircularProgress/CircularProgress.tsx","hooks/useAnimationFrame.ts","components/DurationInput/index.ts","components/DurationInput/DurationInput.tsx","components/Label/Label.tsx","components/Label/index.ts","Theme/theme.ts","Theme/Theme.tsx","Theme/index.ts","sounds/ticktock.wav","sounds/ding2.wav","App/App.tsx","App/index.ts","reportWebVitals.ts","index.tsx"],"names":["typographyVariant","variant","props","theme","typography","fontFamily","fontSize","lineHeight","Button","styled","button","palette","primary","main","Color","fade","string","timerMachine","createMachine","stopped","state","transition","guard","ctx","event","duration","reduce","ticks","setCurrentTick","setRemainingDuration","running","invoke","tickDurationInMs","Promise","resolve","setTimeout","currentTick","resetContext","paused","finished","initialValues","context","undefined","durationPerTick","remainingTicks","remainingDuration","Math","ceil","useSoundEffect","url","trigger","deps","audio","React","useMemo","Audio","play","useCallback","useEffect","CircularProgress","width","height","thickness","ratio","startAngle","PI","useTheme","canvasRef","useRef","actualRatioRef","callback","requestRef","previousTimeRef","performance","now","animate","timeDelta","current","requestAnimationFrame","cancelAnimationFrame","useAnimationFrame","getContext","actualRatio","diff","drawRatio","abs","center","x","y","radius","floor","min","endAngle","clearRect","beginPath","strokeStyle","overlay","lineWidth","arc","stroke","lineCap","ref","DurationInput","input","attrs","type","step","text","transitions","quick","Label","span","color","defaultProps","body","hero","background","secondary","GlobalStyles","createGlobalStyle","Theme","children","SecondaryButton","App","timer","service","initialContext","interpret","onUpdate","start","send","reset","pause","resume","setDuration","setTicks","useState","machine","timerState","setTimerState","useTimer","completionRatio","TickTock","DingSound","readOnly","value","onChange","parseInt","currentTarget","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2790bf6.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components/macro';\n\ntype PropsWithTheme = {\n  theme: DefaultTheme;\n}\n\nexport function typographyVariant(variant: keyof DefaultTheme['typography']) {\n  return (props: PropsWithTheme) => {\n    const { fontFamily, fontSize, lineHeight } = props.theme.typography[variant];\n\n    return `\n      font-family: ${fontFamily};\n      font-size: ${fontSize};\n      line-height: ${lineHeight};\n    `;\n  }\n}\n","import { default as Button } from './Button';\n\nexport default Button;","import styled from 'styled-components/macro';\nimport { typographyVariant } from '../../utilities/theme';\nimport Color from 'color';\n\nconst Button = styled.button`\n  background-color: transparent;\n  color: ${ props => props.theme.palette.primary.main };\n  border-width: 2px;\n  border-radius: 4px;\n  border-style: solid;\n  border-color: ${ props => Color(props.theme.palette.primary.main).fade(0.5).string() };\n  border-radius: 4px;\n  padding: 12px;\n  text-transform: uppercase;\n  ${typographyVariant('button')}\n\n  :hover, &.__hover {\n    background-color: ${ props => Color(props.theme.palette.primary.main).fade(0.9).string() };\n    border-color: ${ props => props.theme.palette.primary.main };\n  }\n\n  :active, &.__active {\n    background-color: ${ props => Color('white').fade(0.9).string() };\n  }\n\n  transition: 100ms linear;\n`;\n\nexport default Button;","import React from 'react';\nimport { createMachine, guard, immediate, interpret, invoke, reduce, Service, state, transition } from 'robot3';\n\nexport interface TimerContext {\n  duration: number,\n  ticks: number,\n  currentTick?: number,\n  remainingDuration?: number,\n};\n\nexport type SetDurationEvent = {\n  type: 'setDuration',\n  duration: number\n};\n\nexport type SetTicksEvent = {\n  type: 'setTicks',\n  ticks: number\n};\n\n\n////////////////////////////////////////////////////////////////\n\n\nexport const timerMachine = createMachine({\n  stopped: state(\n    transition('setDuration', 'stopped',\n      guard(isValidDuration),\n      reduce(setDuration),\n    ),\n\n    transition('setTicks', 'stopped',\n      guard(isValidTicks),\n      reduce(setTicks),\n    ),\n\n    transition('start', 'running',\n      reduce(setCurrentTick),\n      reduce(setRemainingDuration)\n    ),\n  ),\n\n  running: invoke(waitForTick,\n    transition('done', 'finished', \n      guard(isLastTick), \n      reduce(setCurrentTick),\n      reduce(setRemainingDuration),\n    ),\n\n    transition('done', 'running', \n      reduce(setCurrentTick),\n      reduce(setRemainingDuration),\n    ),\n    \n    transition('error', 'finished'),\n\n    transition('pause', 'paused'),\n    \n    transition('reset', 'stopped',\n      reduce(resetContext)\n    ),\n  ),\n\n  paused: state(\n    transition('resume', 'running'),\n    \n    transition('reset', 'stopped',\n      reduce(resetContext)\n    )\n  ),\n\n  finished: state(\n    transition('reset', 'stopped',\n      reduce(resetContext)\n    )\n  ),\n}, createTimerContext);\n\nexport type TimerMachine = typeof timerMachine;\n\n\n//////////////////////////////////////////////////////////////////\n\n\nexport function createTimerContext(initialValues: TimerContext) : TimerContext {\n  return { \n    ...initialValues,\n  };\n}\n\nexport function resetContext(ctx: TimerContext) : TimerContext {\n  return {\n    duration: ctx.duration,\n    ticks: ctx.ticks\n  };\n}\n\nexport function waitForTick({ duration, ticks }: TimerContext) {\n  const durationInMs = duration * 60 * 1000;\n  const tickDurationInMs = durationInMs / ticks;\n\n  return new Promise((resolve) => setTimeout(resolve, tickDurationInMs));\n}\n\nexport function setCurrentTick(context: TimerContext) : TimerContext {\n  return {\n    ...context,\n    currentTick: context.currentTick === undefined \n      ? 0\n      : context.currentTick + 1\n  };\n}\n\nexport function isLastTick({ ticks, currentTick = 0 }: TimerContext) {\n  return (currentTick + 1) === ticks;\n}\n\nexport function isValidDuration(ctx: TimerContext, event: SetDurationEvent) : boolean {\n  const { duration } = event;\n  return duration > 0 && duration < 1000;\n}\n\nexport function setDuration(ctx: TimerContext, event: SetDurationEvent) : TimerContext {\n  const { duration } = event;\n  return { ...ctx, duration };\n}\n\nexport function isValidTicks(ctx: TimerContext, event: SetTicksEvent) : boolean {\n  const { ticks } = event;\n  return ticks > 0;\n}\n\nexport function setTicks(ctx: TimerContext, event: SetTicksEvent) : TimerContext {\n  const { ticks } = event;\n  return { ...ctx, ticks };\n}\n\nexport function setRemainingDuration(ctx: TimerContext) : TimerContext {\n  const { duration, ticks, currentTick = 0 } = ctx;\n  const durationPerTick = duration / ticks;\n  const remainingTicks = ticks - currentTick;\n\n  return {\n    ...ctx,\n    remainingDuration: Math.ceil(remainingTicks * durationPerTick),\n  };\n}\n\n\n//////////////////////////////////////////////////////////////////////\n\n\nexport function useTimer(initialValues?: Partial<TimerContext>) {\n  const service = React.useMemo(() => {\n    const initialContext: TimerContext = {\n      duration: 5,\n      ticks: 5 * 60,\n      ...initialValues,\n    };\n\n    return interpret(timerMachine, onUpdate, initialContext);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  const start = React.useCallback(() => service.send('start'), [service]);\n  const reset = React.useCallback(() => service.send('reset'), [service]);\n  const pause = React.useCallback(() => service.send('pause'), [service]);\n  const resume = React.useCallback(() => service.send('resume'), [service]);\n  const setDuration = React.useCallback((duration) => service.send({ type: 'setDuration', duration }), [service]);\n  const setTicks = React.useCallback((ticks) => service.send({ type: 'setTicks', ticks }), [service]);\n\n  const [timerState, setTimerState] = React.useState({\n    state: service.machine.current,\n    duration: service.context.duration,\n    setDuration: setDuration,\n    remainingDuration: service.context.remainingDuration,\n    ticks: service.context.ticks,\n    setTicks: setTicks,\n    currentTick: service.context.currentTick,\n    start,\n    reset,\n    pause,\n    resume,\n  });\n\n  function onUpdate(service: Service<TimerMachine>) {\n    setTimerState({\n      state: service.machine.current,\n      duration: service.context.duration,\n      setDuration: setDuration,\n      remainingDuration: service.context.remainingDuration,\n      ticks: service.context.ticks,\n      setTicks: setTicks,\n      currentTick: service.context.currentTick,\n      start,\n      reset,\n      pause,\n      resume\n    });\n  }\n\n  return timerState;\n}","import React from 'react';\n\n\nexport type UseSoundEffectProps = Parameters<typeof useSoundEffect>;\n\nexport function useSoundEffect(url: string, trigger?: () => boolean | undefined, deps?: any[]) {\n  const audio = React.useMemo(() => new Audio(url), [url]);\n  const play = React.useCallback(() => audio.play(), [audio]);\n\n  React.useEffect(() => {\n    if (trigger && trigger())\n      play();\n\n    // We don't want the caller to have to memoize trigger, so exclude it from the dependency list\n    // and let them specify dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [play, ...(deps || [])]);\n\n  return play;\n}","import CircularProgress from './CircularProgress';\n\nexport default CircularProgress;","import React from 'react';\nimport { useTheme } from 'styled-components/macro';\nimport { useAnimationFrame } from 'hooks';\n\n\nexport default function CircularProgress({\n  width = 350,\n  height = 350,\n  thickness = 8,\n  ratio = 0,\n  startAngle = -Math.PI / 2\n}) {\n  const theme = useTheme();\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const actualRatioRef = React.useRef(ratio);\n\n  useAnimationFrame((timeDelta: number) => {\n    const ctx = canvasRef.current?.getContext('2d');\n    if (!ctx) return;\n\n    const actualRatio = actualRatioRef.current;\n    const diff = ratio - actualRatio;\n    const ratioDelta = Math.abs(diff) < 0.001 \n      ? diff \n      : diff * timeDelta * 0.01;\n\n    const drawRatio = actualRatio + ratioDelta;\n\n    const center = { x: width / 2, y: height / 2 };\n    const radius = Math.floor(Math.min(width / 2, height / 2) - (thickness / 2));\n    const endAngle = startAngle - (2 * Math.PI * drawRatio);\n\n    // Clear the drawing area each time\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw the background circle\n    ctx.beginPath();\n    ctx.strokeStyle = theme.palette.overlay;\n    ctx.lineWidth = thickness;\n    ctx.arc(center.x, center.y, radius, startAngle, startAngle + 2 * Math.PI);\n    ctx.stroke();\n\n    // Draw the progress arc\n    ctx.beginPath();\n    ctx.strokeStyle = theme.palette.primary.main;\n    ctx.lineWidth = thickness;\n    ctx.lineCap = 'round';\n    ctx.arc(center.x, center.y, radius, startAngle, endAngle, true);\n    ctx.stroke();\n\n    // Update refs\n    actualRatioRef.current = drawRatio;\n\n    const shouldContinueAnimating = drawRatio !== ratio;\n    return shouldContinueAnimating;\n  }, [theme, width, height, thickness, startAngle, ratio]);\n\n  return (\n    <canvas \n      width={width}\n      height={height}\n      ref={canvasRef}\n    />\n  );\n}\n\nfunction clamp(min: number, value: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}","import React from 'react';\n\nexport function useAnimationFrame(callback: (timeDelta: number) => any, deps: any[] = []) {\n  const requestRef = React.useRef(0);\n  const previousTimeRef = React.useRef(performance.now());\n\n  const animate = React.useCallback(() => {\n    const now = performance.now();\n    const timeDelta = now - previousTimeRef.current;\n    const scheduleAgain = callback(timeDelta);\n\n    if (scheduleAgain) {\n      previousTimeRef.current = now;\n      requestRef.current = requestAnimationFrame(animate);\n    }\n    \n    // I don't want to have to memoize the callback outside of this hook, which is\n    // why it's not included in the dependencies.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...deps]);\n\n  React.useEffect(() => {\n    if (requestRef.current)\n      cancelAnimationFrame(requestRef.current);\n\n    previousTimeRef.current = performance.now();\n    requestRef.current = requestAnimationFrame(animate);\n\n    return () => { requestRef.current && cancelAnimationFrame(requestRef.current) };\n  }, [animate]);\n}","import DurationInput from './DurationInput';\n\nexport default DurationInput;","import React from 'react';\nimport styled, { DefaultTheme } from 'styled-components/macro';\nimport { typographyVariant } from '../../utilities/theme';\n\n\nconst DurationInput = styled.input.attrs(props => ({\n  type: 'number',\n  min: 0,\n  step: 1,\n}))`\n  ${typographyVariant('hero')}\n  background-color: ${ props => props.theme.palette.overlay };\n  color: ${ props => props.theme.palette.text.primary };\n  caret-color: transparent;\n  border-style: dotted;\n  border-color: transparent;\n  border-radius: 8px 8px 0px 0px;\n  text-align: center;\n  transition: ${ props => props.theme.transitions.quick };\n\n  :read-only {\n    background-color: transparent;\n  }\n\n  :focus:not(:read-only) {\n    border-bottom-color: ${ props => props.theme.palette.primary.main };\n    \n  }\n\n  :focus {\n    outline: none;\n  }\n\n  -moz-appearance: textfield !important;\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    appearance: none;\n    margin: 0;\n  }\n`;\n\nexport default DurationInput;","import React from 'react';\nimport styled from 'styled-components/macro';\n\nexport type LabelProps = {\n  variant: 'hero' | 'body',\n  color: 'primary' | 'secondary',\n}\n\nconst Label = styled.span<LabelProps>`\n  font-family: ${ props => props.theme.typography[props.variant].fontFamily};\n  font-size: ${ props => props.theme.typography[props.variant].fontSize};\n  line-height: ${ props => props.theme.typography[props.variant].lineHeight};\n  color: ${ props => props.theme.palette.text[props.color]};\n`;\n\nLabel.defaultProps = {\n  variant: 'body',\n  color: 'primary',\n};\n\nexport default Label;","import Label from './Label';\nexport * from './Label';\n\nexport default Label;","\nexport const theme = {\n  typography: {\n    body: { \n      fontFamily: `'Roboto', sans-serif`,\n      fontSize: '1rem',\n      lineHeight: 1,\n    },\n\n    hero: {\n      fontFamily: `'Roboto Mono', monospace`,\n      fontSize: '4rem',\n      lineHeight: 1,\n    },\n\n    button: {\n      fontFamily: `'Roboto', sans-serif`,\n      fontSize: '1.1rem',\n      lineHeight: 1,\n    }\n  },\n  palette: {\n    background: '#242625',\n    overlay: 'rgba(0, 0, 0, .25)',\n\n    primary: {\n      main: '#51CF7B'\n    },\n\n    text: {\n      primary: 'rgba(255, 255, 255, 0.87)',\n      secondary: 'rgba(255, 255, 255, 0.54)'\n    }\n  },\n\n  transitions: {\n    quick: '100ms linear',\n  }\n};","import React from 'react';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components/macro';\nimport { theme } from './theme';\n\n\nconst GlobalStyles = createGlobalStyle`\n  body { \n    background-color: ${({ theme }) => theme.palette.background};\n    color: ${({ theme }) => theme.palette.text.primary};\n    margin: 0;\n    font-family: ${({ theme }) => theme.typography.body.fontFamily};\n    font-size: ${({ theme }) => theme.typography.body.fontSize};\n    line-height: ${({ theme }) => theme.typography.body.lineHeight};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\n\nexport default function Theme({ children }: { children?: React.ReactNode }) {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles/>\n      {children}\n    </ThemeProvider>\n  );\n}","import Theme from './Theme';\nexport * from './theme';\n\nexport default Theme;","export default __webpack_public_path__ + \"static/media/ticktock.fc4391f1.wav\";","export default __webpack_public_path__ + \"static/media/ding2.3d633d15.wav\";","import React from 'react';\nimport styled from 'styled-components/macro';\nimport Button from 'components/Button';\nimport CircularProgress from 'components/CircularProgress';\nimport DurationInput from 'components/DurationInput';\nimport Label from 'components/Label';\nimport { useTimer, useSoundEffect } from 'hooks';\nimport Theme from '../Theme';\n\nimport TickTock from 'sounds/ticktock.wav';\nimport DingSound from 'sounds/ding2.wav';\n\n\nconst SecondaryButton = styled(Button)`\n  margin-left: 30px;\n`;\n\n\nfunction App() {\n  const timer = useTimer();\n  const completionRatio = timer.state === 'stopped' ? 1 : (timer.currentTick || 0) / timer.ticks;\n  const setDuration = (event: React.FormEvent<HTMLInputElement>) => {\n    const value = parseInt(event.currentTarget.value);\n    timer.setDuration(value);\n    timer.setTicks(value * 60);\n  };\n\n  useSoundEffect(TickTock, () => timer.state === 'running', [timer.state]);\n  useSoundEffect(DingSound, () => timer.state === 'finished', [timer.state]);\n  \n  return (\n    <Theme>\n      <div css={`\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      `}>\n        <div css={`\n          position: relative;\n          width: 350px;\n          height: 350px;\n        `}>\n          <CircularProgress\n            width={350}\n            height={350}\n            ratio={completionRatio}\n          />\n          <div css={`\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n          `}>\n            <DurationInput\n              readOnly={timer.state !== 'stopped'}\n              value={timer.state === 'stopped' ? timer.duration : timer.remainingDuration}\n              onChange={setDuration}\n              css={`width: 180px;`}\n            />\n            <Label\n              variant='body'\n              color='secondary'\n              css={`\n                margin-top: 8px;\n                position: relative;\n                left: 8px;\n                letter-spacing: 16px;\n              `}\n            >\n              minutes\n            </Label>\n          </div>\n        </div>\n        <div css={`\n          margin-top: 24px;\n          display: flex;\n          justify-content: center;\n        `}>\n          {timer.state === 'stopped' ? (\n            <Button onClick={timer.start}>\n              Start\n            </Button>\n          ) : (\n            <Button onClick={timer.reset}>\n              Reset\n            </Button>\n          )}\n\n          {timer.state === 'running' && (\n            <SecondaryButton onClick={timer.pause}>\n              Pause\n            </SecondaryButton>\n          )}\n\n          {timer.state === 'paused' && (\n            <SecondaryButton onClick={timer.resume}>\n              Resume\n            </SecondaryButton>\n          )}\n        </div>\n      </div>\n    </Theme>\n  );\n}\n\nexport default App;\n","import App from './App';\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/// <reference types=\"styled-components/cssprop\" />\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}